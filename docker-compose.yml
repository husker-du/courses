version: '3.7'

services:
  spring-backend:
    build:
      context: ./courses-back
      dockerfile: Dockerfile_spring
      args:
        - JAR_FILE=${JAR_FILE}
    image: courses/spring_backend
    container_name: courses_spring
    ports:
      - ${DOCKER_SPRING_EXPOSED_PORT}:8001
    networks:
      - courses_net
    restart: on-failure
  
  mysqldb:
    build:
      context: ./courses-back
      dockerfile: ./Dockerfile
    image: courses/mysql
    container_name: courses_mysql
    ports:
      - ${DOCKER_DB_EXPOSED_PORT}:3306
    volumes:
      - mysql:/var/lib/mysql
    environment:
      TZ: "Europe/Madrid"
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - courses_net
    restart: on-failure

  mysqldb_test:
    build:
      context: ./courses-back
      dockerfile: ./Dockerfile_test
    image: courses/mysql_test
    container_name: courses_mysql_test
    ports:
      - ${DOCKER_DB_EXPOSED_PORT_TEST}:3306
    volumes:
      - mysql_test:/var/lib/mysql
    environment:
      TZ: "Europe/Madrid"
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: ${DB_DATABASE_TEST}
      MYSQL_USER: ${DB_USERNAME_TEST}
      MYSQL_PASSWORD: ${DB_PASSWORD_TEST}
    networks:
      - courses_net_test
    restart: on-failure

  angular:
    build:
      context: ./courses-front
      dockerfile: ./Dockerfile
    image: courses/angular
    container_name: courses_angular
    ports:
      - ${ANGULAR_EXPOSED_PORT}:4200
    volumes:
      - './courses-front/:/app'
      - '/app/node_modules'
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - courses_net
    restart: on-failure

volumes:
  mysql:
  mysql_test:

networks:
  courses_net:
    name: courses_net
  courses_net_test:
    name: courses_net_test
